{"version":3,"file":"main.8c75281adc000c1e20b5.hot-update.js","mappings":"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","sources":["webpack://todo/./app.js","webpack://todo/webpack/runtime/getFullHash"],"sourcesContent":["import React, { Component, useState, useCallback } from \"react\"; // import from react\nimport TodoList from './src/components/TodoList';\nimport { Window, App, View, Button, Text, TextInput, StyleSheet, TouchableOpacity } from \"proton-native\"; // import the proton-native components\n\n\nconst styles = StyleSheet.create({\n  window: { width: 500, height: 600, backgroundColor: \"#fff\" },\n});\n\n\n\nconst Example= () => {\n    // all Components must have a render method\n    const [title, setTitle] = useState(\"\");\n\n    // iniitalize empty object todo\n    const [todo, setTodo] = useState({});\n\n    // Initalize empty array to store todos\n    const [todos, setTodos] = useState([]);\n    \n    // function to add todo object in todo list\n    const addTodo = useCallback(() => {\n      if (title.length > 0) {\n        // Add todo to the list\n        setTodos([...todos, { key: Date.now(), name: title, isChecked: false }]);\n        // clear the value of the textfield\n        setTitle(\"\");\n      }\n    }, [title.length, todos]);\n\n  // function to mark todo as checked or unchecked\n  const checkTodo = useCallback(id => {\n    // loop through todo list and look for the the todo that matches the given id param\n    // update the state using setTodos function\n    setTodos(\n      todos.map(todo => {\n        if (todo.key === id) {\n          todo.isChecked = !todo.isChecked;\n        }\n        return todo;\n      })\n    );\n  }, [todos]);\n\n  // function to delete todo from the todo list\n  const deleteTodo = useCallback(id => {\n    // loop through todo list and return todos that don't match the id\n    // update the state using setTodos function\n    const list = todos.filter(todo => {\n      return todo.key !== id;\n    });\n    \n    setTodos(list);\n  }, [todos]);\n\n  return (\n    <App>\n      {/* you must always include App around everything */}\n      <Window style={styles.window}>\n        {/* all your other components go here*/}\n        <View style={{ \n          flex: 1, \n          backgroundColor: \"#fff\", \n          alignItems: \"center\", \n          justifyContent: \"flex-start\"\n        }}>\n          <View style={{ \n            backgroundColor: \"#00ADEF\",\n            color: \"white\",\n            width: \"100%\",\n            height: 50,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}>\n            <Text style={{\n              color: \"white\",\n              fontSize: 24,\n            }}>\n              Todo App\n            </Text>\n          </View>\n\n          <View style={{\n              flexDirection: \"row\",\n              width: \"100%\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}>\n            <TextInput\n              placeholder=\"Add a todo\"\n              value={title}\n              onChangeText={value => setTitle(value)}\n              style={{ \n                height: 40, \n                // borderWidth: 2,\n                // borderColor: \"#7F39FB\",\n                // borderRadius: 8,\n                padding: 10,\n                margin: 10,\n                width: \"80%\" \n              }}\n            />\n            <TouchableOpacity\n              style={{\n                borderWidth: 2,\n                borderColor: \"#7F39FB\",\n                backgroundColor: '#fff',\n                height: 40,\n                width: \"10%\",\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n              onPress={() => addTodo()}\n            >\n              <Text\n                style={{\n                  color: '#00ADEF',\n                  fontSize: 16,\n                }}\n              >\n                Add\n              </Text>\n            </TouchableOpacity> \n          </View>\n\n        {todos.map(todo => (\n          <TodoList\n            key={todo.key}\n            todo={todo}\n            checkTodo={checkTodo}\n            deleteTodo={deleteTodo}\n          />\n        ))}\n        </View>\n      </Window>\n    </App>\n  );\n}\n\nexport default Example;\n","__webpack_require__.h = () => (\"131f62e6f35ac4546aab\")"],"names":["React","Component","useState","useCallback","TodoList","Window","App","View","Button","Text","TextInput","StyleSheet","TouchableOpacity","styles","create","window","width","height","backgroundColor","Example","title","setTitle","todo","setTodo","todos","setTodos","addTodo","length","key","Date","now","name","isChecked","checkTodo","id","map","deleteTodo","list","filter","flex","alignItems","justifyContent","color","fontSize","flexDirection","value","padding","margin","borderWidth","borderColor"],"sourceRoot":""}