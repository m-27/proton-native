{"version":3,"file":"main.7c3a7efbd22343ca468c.hot-update.js","mappings":"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","sources":["webpack://todo/./app.js","webpack://todo/webpack/runtime/getFullHash"],"sourcesContent":["import React, { Component, useState, useCallback } from \"react\"; // import from react\nimport TodoList from './src/components/TodoList';\nimport { Window, App, View, Button, Text, TextInput, StyleSheet, TouchableOpacity } from \"proton-native\"; // import the proton-native components\n\n\nconst styles = StyleSheet.create({\n  window: { width: 500, height: 600, backgroundColor: \"#fff\" },\n  header: { \n    backgroundColor: \"#00ADEF\",\n    color: \"white\",\n    width: \"100%\",\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    color: \"white\",\n    fontSize: 24,\n  },\n  container: { \n    flex: 1, \n    backgroundColor: \"#fff\", \n    alignItems: \"center\", \n    justifyContent: \"flex-start\"\n  },\n  todo: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  btn: {\n    borderWidth: 2,\n    borderColor: \"#7F39FB\",\n    backgroundColor: '#fff',\n    height: 40,\n    width: \"10%\",\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    color: '#00ADEF',\n    fontSize: 16,\n  },\n});\n\n\n\nconst Example= () => {\n    // all Components must have a render method\n    const [title, setTitle] = useState(\"\");\n\n    // iniitalize empty object todo\n    const [todo, setTodo] = useState({});\n\n    // Initalize empty array to store todos\n    const [todos, setTodos] = useState([]);\n    \n    // function to add todo object in todo list\n    const addTodo = useCallback(() => {\n      if (title.length > 0) {\n        // Add todo to the list\n        setTodos([...todos, { key: Date.now(), name: title, isChecked: false }]);\n        // clear the value of the textfield\n        setTitle(\"\");\n      }\n    }, [title.length, todos]);\n\n  // function to mark todo as checked or unchecked\n  const checkTodo = useCallback(id => {\n    // loop through todo list and look for the the todo that matches the given id param\n    // update the state using setTodos function\n    setTodos(\n      todos.map(todo => {\n        if (todo.key === id) {\n          todo.isChecked = !todo.isChecked;\n        }\n        return todo;\n      })\n    );\n  }, [todos]);\n\n  // function to delete todo from the todo list\n  const deleteTodo = useCallback(id => {\n    // loop through todo list and return todos that don't match the id\n    // update the state using setTodos function\n    const list = todos.filter(todo => {\n      return todo.key !== id;\n    });\n    \n    setTodos(list);\n  }, [todos]);\n\n  return (\n    <App>\n      {/* you must always include App around everything */}\n      <Window style={styles.window}>\n        {/* all your other components go here*/}\n        <View style={styles.container}>\n          <View style={styles.header}>\n            <Text style={styles.title}>\n              Todo App\n            </Text>\n          </View>\n\n          <View style={styles.todo}>\n            <TextInput\n              placeholder=\"Add a todo\"\n              value={title}\n              onChangeText={value => setTitle(value)}\n              style={{ \n                height: 40, \n                // borderWidth: 2,\n                // borderColor: \"#7F39FB\",\n                // borderRadius: 8,\n                padding: 10,\n                margin: 10,\n                width: \"80%\" \n              }}\n            />\n            <TouchableOpacity\n              style={styles.btn}\n              onPress={() => addTodo()}\n            >\n              <Text\n                style={styles.text}\n              >\n                Add\n              </Text>\n            </TouchableOpacity> \n          </View>\n\n        {todos.map(todo => (\n          <TodoList\n            key={todo.key}\n            todo={todo}\n            checkTodo={checkTodo}\n            deleteTodo={deleteTodo}\n          />\n        ))}\n        </View>\n      </Window>\n    </App>\n  );\n}\n\nexport default Example;\n","__webpack_require__.h = () => (\"15f9781fb496c255f375\")"],"names":["React","Component","useState","useCallback","TodoList","Window","App","View","Button","Text","TextInput","StyleSheet","TouchableOpacity","styles","create","window","width","height","backgroundColor","header","color","justifyContent","alignItems","title","fontSize","container","flex","todo","flexDirection","btn","borderWidth","borderColor","text","Example","setTitle","setTodo","todos","setTodos","addTodo","length","key","Date","now","name","isChecked","checkTodo","id","map","deleteTodo","list","filter","value","padding","margin"],"sourceRoot":""}