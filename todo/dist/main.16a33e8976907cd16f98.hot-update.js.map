{"version":3,"file":"main.16a33e8976907cd16f98.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAoD;;CAEsD;;AAE1G,IAAMW,OAAO,GAAE,SAATA,OAAS,GAAM;AACjB;AACA,kBAA0BT,+CAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAcC,QAAd,iBAFiB,CAIjB;;;AACA,mBAAwBX,+CAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb,iBALiB,CAOjB;;;AACA,mBAA0Bb,+CAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAcC,QAAd,iBARiB,CAUjB;;;AACA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAIN,KAAK,CAACO,MAAN,GAAe,CAAnB,EAAsB;AACpB;AACAF,MAAAA,QAAQ,8BAAKD,KAAL,IAAY;AAAEI,QAAAA,GAAG,EAAEC,IAAI,CAACC,GAAL,EAAP;AAAmBC,QAAAA,IAAI,EAAEX,KAAzB;AAAgCY,QAAAA,SAAS,EAAE;AAA3C,OAAZ,GAAR,CAFoB,CAGpB;;AACAX,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAPD,CAXiB,CAoBnB;;;AACA,MAAMY,SAAS,GAAG,SAAZA,SAAY,CAAAC,EAAE,EAAI;AACtB;AACA;AACAT,IAAAA,QAAQ,CACND,KAAK,CAACW,GAAN,CAAU,UAAAb,IAAI,EAAI;AAChB,UAAIA,IAAI,CAACM,GAAL,KAAaM,EAAjB,EAAqB;AACnBZ,QAAAA,IAAI,CAACU,SAAL,GAAiB,CAACV,IAAI,CAACU,SAAvB;AACD;;AACD,aAAOV,IAAP;AACD,KALD,CADM,CAAR;AAQD,GAXD,CArBmB,CAkCnB;;;AACA,MAAMc,UAAU,GAAG,SAAbA,UAAa,CAAAF,EAAE,EAAI;AACvB;AACA;AACAT,IAAAA,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAa,UAAAf,IAAI,EAAI;AAC5B,aAAOA,IAAI,CAACM,GAAL,KAAaM,EAApB;AACD,KAFQ,CAAD,CAAR;AAGD,GAND,CAnCmB,CA2CnB;AACA;AACA;AACA;;;AAGA,sBACE,2DAAC,8CAAD,qBAEE,2DAAC,iDAAD;AAAQ,SAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE,GAAtB;AAA2BC,MAAAA,eAAe,EAAE;AAA5C;AAAf,kBAEE,2DAAC,+CAAD;AAAM,SAAK,EAAE;AACXC,MAAAA,IAAI,EAAE,CADK;AAEXD,MAAAA,eAAe,EAAE,MAFN;AAGXE,MAAAA,UAAU,EAAE,QAHD;AAIXC,MAAAA,cAAc,EAAE;AAJL;AAAb,kBAME,2DAAC,+CAAD;AAAM,SAAK,EAAE;AACXH,MAAAA,eAAe,EAAE,SADN;AAEXI,MAAAA,KAAK,EAAE,OAFI;AAGXN,MAAAA,KAAK,EAAE,MAHI;AAIXC,MAAAA,MAAM,EAAE,EAJG;AAKXI,MAAAA,cAAc,EAAE,QALL;AAMXD,MAAAA,UAAU,EAAE;AAND;AAAb,kBAQE,2DAAC,+CAAD;AAAM,SAAK,EAAE;AACXE,MAAAA,KAAK,EAAE,OADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC;AAAb,gBARF,CANF,eAsBE,2DAAC,+CAAD;AAAM,SAAK,EAAE;AACTC,MAAAA,aAAa,EAAE,KADN;AAETR,MAAAA,KAAK,EAAE,MAFE;AAGTK,MAAAA,cAAc,EAAE,QAHP;AAITD,MAAAA,UAAU,EAAE;AAJH;AAAb,kBAME,2DAAC,oDAAD;AACE,eAAW,EAAC,YADd;AAEE,SAAK,EAAEtB,KAFT;AAGE,gBAAY,EAAE,sBAAA2B,KAAK;AAAA,aAAI1B,QAAQ,CAAC0B,KAAD,CAAZ;AAAA,KAHrB;AAIE,SAAK,EAAE;AACLR,MAAAA,MAAM,EAAE,EADH;AAEL;AACA;AACA;AACAS,MAAAA,OAAO,EAAE,EALJ;AAMLC,MAAAA,MAAM,EAAE,EANH;AAOLX,MAAAA,KAAK,EAAE;AAPF;AAJT,IANF,eAqBE,2DAAC,2DAAD;AACE,SAAK,EAAE;AACLY,MAAAA,WAAW,EAAE,CADR;AAELC,MAAAA,WAAW,EAAE,SAFR;AAGLX,MAAAA,eAAe,EAAE,MAHZ;AAILD,MAAAA,MAAM,EAAE,EAJH;AAKLD,MAAAA,KAAK,EAAE,KALF;AAMLI,MAAAA,UAAU,EAAE,QANP;AAOLC,MAAAA,cAAc,EAAE;AAPX,KADT;AAUE,WAAO,EAAE;AAAA,aAAMjB,OAAO,EAAb;AAAA;AAVX,kBAYE,2DAAC,+CAAD;AACE,SAAK,EAAE;AACLkB,MAAAA,KAAK,EAAE,SADF;AAELC,MAAAA,QAAQ,EAAE;AAFL;AADT,WAZF,CArBF,CAtBF,EAkECrB,KAAK,CAACW,GAAN,CAAU,UAAAb,IAAI;AAAA,wBACb,2DAAC,+CAAD;AACE,WAAK,EAAE;AACLgB,QAAAA,KAAK,EAAE,MADF;AAELc,QAAAA,OAAO,EAAE,MAFJ;AAGLN,QAAAA,aAAa,EAAE,KAHV;AAILH,QAAAA,cAAc,EAAE,cAJX;AAKLD,QAAAA,UAAU,EAAE,QALP;AAMLF,QAAAA,eAAe,EAAE,SANZ;AAOLQ,QAAAA,OAAO,EAAE,EAPJ;AAQLK,QAAAA,iBAAiB,EAAE,CARd;AASLC,QAAAA,iBAAiB,EAAE;AATd,OADT;AAYE,SAAG,EAAEhC,IAAI,CAACM;AAZZ,oBAuBE,2DAAC,2DAAD;AACE,WAAK,EAAE;AACLsB,QAAAA,WAAW,EAAE,CADR;AAELC,QAAAA,WAAW,EAAE,SAFR;AAGLX,QAAAA,eAAe,EAAE,MAHZ;AAILD,QAAAA,MAAM,EAAE,EAJH;AAKLD,QAAAA,KAAK,EAAE,KALF;AAMLI,QAAAA,UAAU,EAAE,QANP;AAOLC,QAAAA,cAAc,EAAE;AAPX,OADT;AAUE,aAAO,EAAE;AAAA,eAAMV,SAAS,CAACX,IAAI,CAACM,GAAN,CAAf;AAAA;AAVX,oBAYE,2DAAC,+CAAD;AACE,WAAK,EAAE;AACLgB,QAAAA,KAAK,EAAE,SADF;AAELC,QAAAA,QAAQ,EAAE;AAFL;AADT,OAMGvB,IAAI,CAACU,SAAL,GAAiB,GAAjB,GAAuB,IAN1B,CAZF,CAvBF,eA8CE,2DAAC,+CAAD,QAAOV,IAAI,CAACS,IAAZ,CA9CF,CADa;AAAA,GAAd,CAlED,CAFF,CAFF,CADF;AAsID,CAvLD;;AAyLA,iEAAeZ,OAAf;;;;;;;;;UC7LA","sources":["webpack://todo/./app.js","webpack://todo/webpack/runtime/getFullHash"],"sourcesContent":["import React, { Component, useState } from \"react\"; // import from react\n\nimport { Window, App, View, Button, Text, TextInput, StyleSheet, TouchableOpacity } from \"proton-native\"; // import the proton-native components\n\nconst Example= () => {\n    // all Components must have a render method\n    const [title, setTitle] = useState(\"\");\n\n    // iniitalize empty object todo\n    const [todo, setTodo] = useState({});\n\n    // Initalize empty array to store todos\n    const [todos, setTodos] = useState([]);\n    \n    // function to add todo object in todo list\n    const addTodo = () => {\n      if (title.length > 0) {\n        // Add todo to the list\n        setTodos([...todos, { key: Date.now(), name: title, isChecked: false }]);\n        // clear the value of the textfield\n        setTitle(\"\");\n      }\n    };\n\n  // function to mark todo as checked or unchecked\n  const checkTodo = id => {\n    // loop through todo list and look for the the todo that matches the given id param\n    // update the state using setTodos function\n    setTodos(\n      todos.map(todo => {\n        if (todo.key === id) {\n          todo.isChecked = !todo.isChecked;\n        }\n        return todo;\n      })\n    );\n  };\n\n  // function to delete todo from the todo list\n  const deleteTodo = id => {\n    // loop through todo list and return todos that don't match the id\n    // update the state using setTodos function\n    setTodos(todos.filter(todo => {\n      return todo.key !== id;\n    }));\n  };\n\n  // useEffect(() => {\n  //   console.log(todos.length, \"TodoList length\");\n  //   //console.log(todos);\n  // }, [todos]);\n\n\n  return (\n    <App>\n      {/* you must always include App around everything */}\n      <Window style={{ width: 500, height: 600, backgroundColor: \"#fff\" }}>\n        {/* all your other components go here*/}\n        <View style={{ \n          flex: 1, \n          backgroundColor: \"#fff\", \n          alignItems: \"center\", \n          justifyContent: \"flex-start\"\n        }}>\n          <View style={{ \n            backgroundColor: \"#00ADEF\",\n            color: \"white\",\n            width: \"100%\",\n            height: 50,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}>\n            <Text style={{\n              color: \"white\",\n              fontSize: 24,\n            }}>\n              Todo App\n            </Text>\n          </View>\n\n          <View style={{\n              flexDirection: \"row\",\n              width: \"100%\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}>\n            <TextInput\n              placeholder=\"Add a todo\"\n              value={title}\n              onChangeText={value => setTitle(value)}\n              style={{ \n                height: 40, \n                // borderWidth: 2,\n                // borderColor: \"#7F39FB\",\n                // borderRadius: 8,\n                padding: 10,\n                margin: 10,\n                width: \"80%\" \n              }}\n            />\n\n            <TouchableOpacity\n              style={{\n                borderWidth: 2,\n                borderColor: \"#7F39FB\",\n                backgroundColor: '#fff',\n                height: 40,\n                width: \"10%\",\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n              onPress={() => addTodo()}\n            >\n              <Text\n                style={{\n                  color: '#00ADEF',\n                  fontSize: 16,\n                }}\n              >\n                Add\n              </Text>\n            </TouchableOpacity> \n          </View>\n\n        {todos.map(todo => (\n          <View \n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-around\",\n              alignItems: \"center\",\n              backgroundColor: \"#EEEEEE\",\n              padding: 10,\n              borderBottomWidth: 1,\n              borderBottomColor: \"#666666\"\n            }} \n            key={todo.key} \n          >\n            {/* <Icon\n              name={todo.isChecked ? \"check-circle\" : \"radio-button-unchecked\"}\n              style={{ width: \"20%\" }}\n              size={20}\n              color=\"#666666\"\n              onPress={() => checkTodo(todo.key)}\n            /> */}\n\n\n            <TouchableOpacity\n              style={{\n                borderWidth: 2,\n                borderColor: \"#7F39FB\",\n                backgroundColor: '#fff',\n                height: 40,\n                width: \"10%\",\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n              onPress={() => checkTodo(todo.key)}\n            >\n              <Text\n                style={{\n                  color: '#00ADEF',\n                  fontSize: 16,\n                }}\n              >\n                {todo.isChecked ? \"X\" : \"Os\"}\n              </Text>\n            </TouchableOpacity> \n\n\n            <Text>{todo.name}</Text>\n            {/* <Icon\n              name=\"delete\"\n              style={styles.trailing}\n              size={20}\n              color=\"#666666\"\n              onPress={() => props.deleteTodo(props.todo.key)}\n            /> */}\n          </View>\n        ))}\n        </View>\n\n\n      </Window>\n    </App>\n  );\n}\n\nexport default Example;","__webpack_require__.h = () => (\"8b7524fd2801b30923da\")"],"names":["React","Component","useState","Window","App","View","Button","Text","TextInput","StyleSheet","TouchableOpacity","Example","title","setTitle","todo","setTodo","todos","setTodos","addTodo","length","key","Date","now","name","isChecked","checkTodo","id","map","deleteTodo","filter","width","height","backgroundColor","flex","alignItems","justifyContent","color","fontSize","flexDirection","value","padding","margin","borderWidth","borderColor","display","borderBottomWidth","borderBottomColor"],"sourceRoot":""}