{"version":3,"file":"main.56fc7906b8f589ca51fe.hot-update.js","mappings":"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","sources":["webpack://my-app/./app.js","webpack://my-app/webpack/runtime/getFullHash"],"sourcesContent":["import React, { Component, useState, useCallback } from \"react\"; // import from react\n\nimport { Window, App, Text, Button, View } from \"proton-native\"; // import the proton-native components\n\n\nconst POMODORO_LEN = 1500; // [s]\n\nconst Example = () => {\n    // all Components must have a render method\n    const [timeInSeconds, setTimeInSeconds] = useState(POMODORO_LEN);\n    const [option, setOption] = useState('LIST');\n    const [minutes, setMinutes] = useState('00');\n    const [seconds, setSeconds] = useState('01');\n    const [time, setTime] = useState({ hours: 0, minutes: 0, seconds: 1 });\n    const [startTime, setStartTime] = useState('');\n\n    const initState = {\n      count: 0,\n      start: false,\n      times: 1\n    };\n    let [count, setCount] = useState(initState.count);\n    let [start, setStart] = useState(initState.start);\n    let [times, setTimes] = useState(initState.times);\n\n    const reset = () => {\n      setCount(initState.count);\n      setStart(initState.start);\n      setTimes(initState.times);\n    };\n\n\n  useEffect(() => {\n      if (!start) {\n        return;\n      }\n      let id = setInterval(() => {\n        setCount(count => count + 1);\n      }, 1000 / times);\n      return () => clearInterval(id);\n    },\n    [start, times]\n  );\n\n    // const startTimer = useCallback(() => {\n  \n    //   if (!this.intervalId && timeInSeconds > 0) {\n    //     this.setState({ startTime: Date.now() }); // [ms]\n  \n    //     // https://stackoverflow.com/a/29972322/10620237\n    //     this.intervalId = setInterval(() => {\n    //       const elapsedTime = Date.now() - this.state.startTime; // [ms]\n    //       this.updateTimer(timeInSeconds - Math.floor(elapsedTime / 1000)); // [s]\n    //     }, 100);\n    //   }\n    // }, [timeInSeconds]);\n\n\n    return (\n      <App>\n        {/* you must always include App around everything */}\n        <Window style={{ width: 700, height: 700, backgroundColor: \"#fff\" }}>\n          {/* todos os seus outros componentes v√£o aqui*/}\n          <View style={{ margin: 10, flex: 1 }}>\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'center',\n                marginBottom: 10,\n              }}\n            >\n              <Text style={{ fontSize: 55 }}>CatApi</Text>\n            </View>\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n              <Text style={{ fontSize: 50, color: 'darkred' }}>\n                {`${count}`}\n              </Text>\n            </View>\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n              <Button onPress={() => setStart(true)} title=\"Start\" />\n              <Button onPress={() => setStart(false)} title=\"Pause\" />\n              <Button onPress={() => reset()} title=\"Reset\" />\n            </View>\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'center',\n                marginBottom: 10,\n              }}\n            >\n            </View>\n          </View>\n        </Window>\n      </App>\n    );\n  }\n\n\nexport default Example;","__webpack_require__.h = () => (\"4b29c49dfecfec8b2ee3\")"],"names":["React","Component","useState","useCallback","Window","App","Text","Button","View","POMODORO_LEN","Example","timeInSeconds","setTimeInSeconds","option","setOption","minutes","setMinutes","seconds","setSeconds","hours","time","setTime","startTime","setStartTime","initState","count","start","times","setCount","setStart","setTimes","reset","useEffect","id","setInterval","clearInterval","width","height","backgroundColor","margin","flex","flexDirection","justifyContent","marginBottom","fontSize","color"],"sourceRoot":""}